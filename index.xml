<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Junpei Kawamoto</title>
    <link>https://jkawamoto.github.io/</link>
    <description>Recent content on Junpei Kawamoto</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2016 Junpei Kawamoto</copyright>
    <lastBuildDate>Sat, 13 Aug 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://jkawamoto.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>i18n package in Meteor</title>
      <link>https://jkawamoto.github.io/blogs/i18n-package-in-meteor/</link>
      <pubDate>Sat, 13 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/blogs/i18n-package-in-meteor/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://www.meteor.com/&#34;&gt;Meteor&lt;/a&gt; を使った Web アプリケーションを国際化 (i18n) する際の備忘録．
&lt;a href=&#34;https://atmospherejs.com/universe/i18n&#34;&gt;universe:i18n&lt;/a&gt; パッケージの使い方をまとめる．&lt;/p&gt;

&lt;h3 id=&#34;universe-i18n&#34;&gt;universe:i18n&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://atmospherejs.com&#34;&gt;Atmosphere&lt;/a&gt; に登録されている国際化パッケージの一つ．
サポートしているロケールの一覧は，&lt;a href=&#34;https://github.com/vazco/meteor-universe-i18n/blob/master/lib/locales.js&#34;&gt;ここ&lt;/a&gt;から確認できる．
また，JSON または YAML で翻訳対応表を渡すことができる．&lt;/p&gt;

&lt;p&gt;インストールには，次のコマンドを実行する．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ meteor add universe:i18n
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;インポートは，必要なスクリプトファイルで&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import i18n from &amp;quot;meteor/universe:i18n&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;とすれば良い．&lt;/p&gt;

&lt;h4 id=&#34;翻訳語の登録&#34;&gt;翻訳語の登録&lt;/h4&gt;

&lt;p&gt;翻訳対応表はファイルで与えることもできるが，
API を使って個別に登録することもできる．&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;i18n.addTranslation(“ロケール&amp;quot;, “namespace&amp;quot;, “keyword&amp;quot;, “word&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;の形式で登録できる．&lt;/p&gt;

&lt;h4 id=&#34;翻訳語ファイル&#34;&gt;翻訳語ファイル&lt;/h4&gt;

&lt;p&gt;前節の様に個別に &lt;code&gt;i18n.addTranslation&lt;/code&gt; 関数を使って登録するのは手間なので，
ファイルで与えることができる．
翻訳語のファイルは JSON か YAML に対応しており，
ファイル名がそれぞれ &lt;code&gt;.i18n.json&lt;/code&gt; または &lt;code&gt;.i18n.yml&lt;/code&gt; で終わる必要がある．
ここでは，YAML 形式を使うことにする．&lt;/p&gt;

&lt;p&gt;翻訳ファイルは単純なキー・バリューの組み合わせを列挙する．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ja.i18n.yml&#34;&gt;ok: 決定
cancel: キャンセル
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;また，&lt;code&gt;_namespace&lt;/code&gt; 属性を使って各ファイルが属する名前空間を指定できる．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ja.i18n.yml&#34;&gt;_namespace: ui
ok: 決定
cancel: キャンセル
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;各翻訳ファイルがどのロケール用のものか示すには，
ファイルのパスにロケールを含めるか，&lt;code&gt;_locale&lt;/code&gt; 要素を与えるか二通りの方法がある．
ファイルを開かなければ分からない &lt;code&gt;_locale&lt;/code&gt; 要素よりは，ファイルのパスを使う方が良いだろう．&lt;/p&gt;

&lt;p&gt;ファイルパスは，&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;en-us.i18n.yml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;en-us/someName.i18n.yml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;などの形式がサポートされている．
これらのファイルは，&lt;code&gt;imports&lt;/code&gt; 以外に置いておけば自動でインポートされる．&lt;/p&gt;

&lt;h4 id=&#34;翻訳語の取得&#34;&gt;翻訳語の取得&lt;/h4&gt;

&lt;p&gt;キーワードに対応する翻訳語を取得するには，
&lt;code&gt;i18n.__(namespace, key)&lt;/code&gt; メソッドを使う．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;i18n.__(“ui”, “ok”); // -&amp;gt; 決定
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;ロケールの設定-変更&#34;&gt;ロケールの設定・変更&lt;/h4&gt;

&lt;p&gt;ロケールの設定・変更には，&lt;code&gt;i18n.setLocale(“ロケール”)&lt;/code&gt; メソッドを使う．
このメソッドは，非同期で翻訳データを取得する．
&lt;code&gt;i18n.setLocale&lt;/code&gt; は &lt;code&gt;Promise&lt;/code&gt; を返すので，&lt;code&gt;.then&lt;/code&gt; を使って新しいロケールを使った操作を行える．&lt;/p&gt;

&lt;h3 id=&#34;angular-meteor-での利用&#34;&gt;Angular-Meteor での利用&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://www.angular-meteor.com/&#34;&gt;Angular-Meteor&lt;/a&gt; で利用する場合，
&lt;code&gt;i18n.getTranslation&lt;/code&gt; メソッドをスコープに登録してテンプレートで利用する．
例えば，&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-app.js&#34;&gt;class AppCtrl {

  constructor() {
    this.translator = i18n.getTranslation;
  }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;というコントローラを用意すれば，テンプレート側では，&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;md-button ng-click=&amp;quot;$ctrl.onNext()” aria-label=&amp;quot;$ctrl.translator(‘ui&#39;, ‘ok’)&amp;quot;&amp;gt;
  {{$ctrl.translator(&amp;quot;button&amp;quot;, &amp;quot;start&amp;quot;)}}
&amp;lt;/md-button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;と利用できる．ロケールが変更されるたびに表示を変えるためには，&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const setLocalePromise = i18n.setLocale(locale) || i18n.setLocale(&amp;quot;en&amp;quot;);
setLocalePromise.then((e) =&amp;gt; {
   this.translator = i18n.getTranslation;
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;などとすれば良い．（上の例はロケールが見つからない場合に英語設定している）&lt;/p&gt;

&lt;p&gt;ただし，UI イベント以外の原因で &lt;code&gt;setLocale&lt;/code&gt; を呼んだ場合（例えばコンストラクタ内など）
DOM の更新は行われない．
この場合は，$scope.$apply() を使う必要がある．&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;constructor($scope) {

  const setLocalePromise = i18n.setLocale(getLang()) || i18n.setLocale(&amp;quot;en&amp;quot;);
  setLocalePromise.then(() =&amp;gt; {
    $scope.$apply( () =&amp;gt;{
      this.translator = i18n.getTranslation;
    });
  });

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;詳細は，&lt;a href=&#34;http://qiita.com/akkun_choi/items/22048f31f9add7fda2c5&#34;&gt;AngularJS and scope.$apply（日本語訳）&lt;/a&gt;．&lt;/p&gt;

&lt;h3 id=&#34;まとめ&#34;&gt;まとめ&lt;/h3&gt;

&lt;p&gt;Meteor 用国際化パッケージ &lt;a href=&#34;https://atmospherejs.com/universe/i18n&#34;&gt;universe:i18n&lt;/a&gt; の
最低限の使い方をまとめた．
今回紹介していない API もあるので，
&lt;a href=&#34;https://github.com/vazco/meteor-universe-i18n&#34;&gt;オリジナルのドキュメント&lt;/a&gt;
も参考にされたい．&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Upstart で Docker コンテナを起動</title>
      <link>https://jkawamoto.github.io/blog-ja/starting-docker-container-via-upstart/</link>
      <pubDate>Sat, 08 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/blog-ja/starting-docker-container-via-upstart/</guid>
      <description>&lt;p&gt;合っているのかイマイチ分かっていないけれど，下記の方法でとりあえず動いていると思う．&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;start on filesystem and started docker.io
stop on runlevel [!2345]

respawn
respawn limit 5 5

pre-start script

  # 古いコンテナが残っていたら削除
  OLD=`docker ps -a | grep “foo&amp;quot; | cut -d &amp;quot; &amp;quot; -f 1`
  if [ $OLD ]; then
      /usr/local/bin/docker kill $OLD
      /usr/local/bin/docker rm $OLD
  fi

end script

exec /usr/local/bin/docker run —name=foo -v /data:/var/data bar:latest
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Systemd の設定</title>
      <link>https://jkawamoto.github.io/blog-ja/systemd-configurations/</link>
      <pubDate>Thu, 25 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/blog-ja/systemd-configurations/</guid>
      <description>

&lt;h3 id=&#34;マウントユニット&#34;&gt;マウントユニット&lt;/h3&gt;

&lt;p&gt;ファイルシステムのマウントを設定する．
ユニットファイルはマウントポイントによって決まり拡張子は &lt;code&gt;.mount&lt;/code&gt;．例えば，/var/data にマウントする場合，
ユニットファイル名は &lt;code&gt;var-data.mount&lt;/code&gt; と / を - に置き換える．パスに - が含まれている場合はエスケープする．&lt;/p&gt;

&lt;h4 id=&#34;nfs-を用いてマウントする例&#34;&gt;NFS を用いてマウントする例&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-conf&#34;&gt;[Unit]
Description=some network hdd

[Mount]
What=192.168.0.5:/data
Where=/var/data
Type=nfs
Options=nolock

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;サービスユニット&#34;&gt;サービスユニット&lt;/h3&gt;

&lt;p&gt;Docker 用サービスを起動する設定．docker イメージの作成から行えるが，今回は既にあるイメージを起動する．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-conf&#34;&gt;[Unit]
Description=Apache2
After=docker.service var-data.mount
Requires=docker.service var-data.mount

[Service]
TimeoutStartSec=0
ExecStartPre=-/usr/bin/docker kill apache2
ExecStartPre=-/usr/bin/docker rm apache2
ExecStart=/usr/bin/docker run --name apache2 -v /var/data:/var/www/html:rw -p 80:80 apache2:latest
ExecStop /usr/bin/docker stop apache2

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ユニットの有効化&#34;&gt;ユニットの有効化&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ sudo systemctl enable /etc/systemd/system/var-data.mount
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>XSLT にてノード名別に処理を切り替える</title>
      <link>https://jkawamoto.github.io/blog-ja/switching-action-in-xslt/</link>
      <pubDate>Tue, 23 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/blog-ja/switching-action-in-xslt/</guid>
      <description>&lt;p&gt;for-each 要素 + when 要素で対応しようとしていたがうまく行かなかった．
XPath にてノード名を比較する方法が無いため？&lt;/p&gt;

&lt;p&gt;XSLT 的には apply-templetes 要素を使うのが正しいかと思われる．&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>パブリックデータセット</title>
      <link>https://jkawamoto.github.io/blog-ja/public-dataset-list/</link>
      <pubDate>Sun, 13 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/blog-ja/public-dataset-list/</guid>
      <description>&lt;p&gt;パブリックデータセットまとめページのリスト。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kdnuggets.com/datasets/index.html&#34;&gt;Datasets for Data Mining and Data Science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://aws.amazon.com/datasets&#34;&gt;Amazon Public Datasets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.datawrangling.com/some-datasets-available-on-the-web&#34;&gt;Some Datasets Available on the Web&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>個人情報の固まり</title>
      <link>https://jkawamoto.github.io/blog-ja/lots-of-private-information/</link>
      <pubDate>Sun, 13 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/blog-ja/lots-of-private-information/</guid>
      <description>&lt;p&gt;電話長などで公開されているデータだと思うけれど，住所氏名電話番号が簡単に手に入るウェブページ．&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://atamaga.jp/whitepage/2012/index.html&#34;&gt;住所でポン！2012&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>プライバシ保護データマネジメント関連のプロジェクト</title>
      <link>https://jkawamoto.github.io/blog-ja/ppdm-projects/</link>
      <pubDate>Sat, 12 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/blog-ja/ppdm-projects/</guid>
      <description>&lt;p&gt;プライバシ保護データマネジメント関連のプロジェクト&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;(OpenPDS)[&lt;a href=&#34;http://openpds.media.mit.edu/&#34;&gt;http://openpds.media.mit.edu/&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;(情報銀行コンソーシアム)[&lt;a href=&#34;http://www.information-bank.net/&#34;&gt;http://www.information-bank.net/&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>PDF から EPS への変換</title>
      <link>https://jkawamoto.github.io/blog-ja/converting-pdf-to-eps/</link>
      <pubDate>Sun, 09 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/blog-ja/converting-pdf-to-eps/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install xpdf
pdftops -eps hoge.pdf piyo.eps
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;フォントの問題がある場合は，&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd /usr/local/ghostscript
sudo ln -s ./9.07/Resource/Font ./font
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;と &lt;code&gt;/usr/local/etc/xpdfrc&lt;/code&gt; を編集してフォント設定のコメントを有効にする．&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>伊豆さんの楕円曲線暗号資料</title>
      <link>https://jkawamoto.github.io/blog-ja/lecture-notes-of-cryptography/</link>
      <pubDate>Tue, 11 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/blog-ja/lecture-notes-of-cryptography/</guid>
      <description>&lt;p&gt;どこで公開されていたのか忘れやすいのでメモ．&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://researchmap.jp/mulzrkzae-42427/#_42427&#34;&gt;http://researchmap.jp/mulzrkzae-42427/#_42427&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Windows8 でネットワーク名を変更する</title>
      <link>https://jkawamoto.github.io/blog-ja/windows8-networkname/</link>
      <pubDate>Mon, 16 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/blog-ja/windows8-networkname/</guid>
      <description>&lt;p&gt;コンテキストメニューに「名前変更」を付ければ良いだけのことなのに，
かなり面倒な手続きを踏まないと変更できない．&lt;/p&gt;

&lt;p&gt;まず，コントロールパネルから管理ツールを開き，ローカルセキュリティポリシーを起動．
ネットワークリストマネージャの中に接続先のリストがあるので，変更したい接続のプロパティを開いて変更する．&lt;/p&gt;

&lt;p&gt;しかし，これ名前変更ではなくてエイリアスを作っているだけな気がする．
ローカルセキュリティポリシー上では，「ネットワーク 2」 や「ネットワーク 3」のままで，
どこの設定か分かりにくいし「説明」欄は変更できないようす．酷い設計である．&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>python で RSS フィードを読む</title>
      <link>https://jkawamoto.github.io/blog-ja/reading-rss-by-python/</link>
      <pubDate>Thu, 12 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/blog-ja/reading-rss-by-python/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://pypi.python.org/pypi/feedparser&#34;&gt;feedparser&lt;/a&gt; が良さそう&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Deep Learning ライブラリのリンク集</title>
      <link>https://jkawamoto.github.io/blog-ja/deep-learning-libraries/</link>
      <pubDate>Mon, 09 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/blog-ja/deep-learning-libraries/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;deeplearning.net&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>改行をカンマに置換</title>
      <link>https://jkawamoto.github.io/blog-ja/replacing-newlines/</link>
      <pubDate>Tue, 06 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/blog-ja/replacing-newlines/</guid>
      <description>&lt;p&gt;sed で変換するのは色々面倒で，&lt;a href=&#34;http://unicus.jp/skmk/archives/315&#34;&gt;ここ&lt;/a&gt;によると，&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ tr &#39;\n&#39; &#39;,&#39; &amp;lt; filename
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;が一番簡単．&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>R でのパッケージインストール</title>
      <link>https://jkawamoto.github.io/blog-ja/installing-r-package/</link>
      <pubDate>Wed, 12 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/blog-ja/installing-r-package/</guid>
      <description>&lt;p&gt;もっと良い方法があるのかも知れないが・・・．
ChangeAnomalyDetection パッケージをインストールする場合，ルートで R を起動し&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;install.packages(&amp;quot;ChangeAnomalyDetection&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;を実行する．
依存パッケージがあるとエラーが出るので，
そのエラーで必要と言われたパッケージを同様の方法でインストールしてから再度インストールする．&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>某 BibTeX スタイルで DOI を非表示にする</title>
      <link>https://jkawamoto.github.io/blog-ja/disable-doi/</link>
      <pubDate>Tue, 16 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/blog-ja/disable-doi/</guid>
      <description>&lt;p&gt;DOI を参考文献リストに載せたくない場合，bstファイルの以下の部分&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;FUNCTION {format.doi.url}
{ doi empty$
    { url empty$
     &#39;skip$
     { format.online output.nonnull
       format.url
     }
     if$
    }
    { format.online output.nonnull
      &amp;quot;\doi{&amp;quot; doi &amp;quot;}&amp;quot; * *
    }
  if$
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;を&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;FUNCTION {format.doi.url}{}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;としておけば良い．&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>