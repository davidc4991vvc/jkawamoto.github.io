<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Junpei Kawamoto</title>
    <link>https://www.jkawamoto.info/</link>
    <description>Recent content on Junpei Kawamoto</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2016 Junpei Kawamoto</copyright>
    <lastBuildDate>Wed, 19 Oct 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.jkawamoto.info/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Include GitHub repositories to requirements.txt</title>
      <link>https://www.jkawamoto.info/blogs/include-github-repositories-to-requirements-txt/</link>
      <pubDate>Wed, 19 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.jkawamoto.info/blogs/include-github-repositories-to-requirements-txt/</guid>
      <description>

&lt;h2 id=&#34;summary:a0ee9d0ea8575a88500eea9bd15cac6b&#34;&gt;Summary&lt;/h2&gt;

&lt;p&gt;This document explains how to include packages hosted in GitHub
but not not registered in &lt;a href=&#34;https://pypi.python.org/pypi&#34;&gt;PyPI&lt;/a&gt; into &lt;code&gt;requirements.txt&lt;/code&gt;,
and how to configure &lt;code&gt;setup.py&lt;/code&gt; referring &lt;code&gt;requirements.txt&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;requirements-txt:a0ee9d0ea8575a88500eea9bd15cac6b&#34;&gt;requirements.txt&lt;/h2&gt;

&lt;p&gt;Supposing &lt;a href=&#34;https://github.com/rgmining/common&#34;&gt;https://github.com/rgmining/common&lt;/a&gt; as the GitHub repository to be added to &lt;code&gt;requirements.txt&lt;/code&gt;,
the package information for the repository is&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-requirements.txt&#34;&gt;-e git+https://github.com/rgmining/common.git#egg=rgmining_common-0.9.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The format after &lt;code&gt;#egg=&lt;/code&gt; shoule be &lt;code&gt;&amp;lt;package name&amp;gt;-&amp;lt;version&amp;gt;&lt;/code&gt;.
If you&amp;rsquo;re using &lt;code&gt;pip-tools&lt;/code&gt; to compile &lt;code&gt;requirements.txt&lt;/code&gt;,
your &lt;code&gt;requirements.in&lt;/code&gt; should have the same clause.&lt;/p&gt;

&lt;h2 id=&#34;setup-py:a0ee9d0ea8575a88500eea9bd15cac6b&#34;&gt;setup.py&lt;/h2&gt;

&lt;p&gt;To include &lt;code&gt;requirements.txt&lt;/code&gt; in &lt;code&gt;setup.py&lt;/code&gt;,
give the following &lt;code&gt;load_requires_from_file&lt;/code&gt; function to &lt;code&gt;install_requires&lt;/code&gt; attribute:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-setup.py&#34;&gt;from setuptools import setup, find_packages

def load_requires_from_file(filepath):
    with open(filepath) as fp:
        return [pkg_name.strip() for pkg_name in fp.readlines()]

setup(
    # Other clauses are omitted.
    install_requires=load_requires_from_file(&amp;quot;requirements.txt&amp;quot;)
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If your &lt;code&gt;requirements.txt&lt;/code&gt; has URLs,
&lt;code&gt;load_requires_from_file&lt;/code&gt; function should be the following:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-setup.py&#34;&gt;def take_package_name(name):
    if name.startswith(&amp;quot;-e&amp;quot;):
        return name[name.find(&amp;quot;=&amp;quot;)+1:name.rfind(&amp;quot;-&amp;quot;)]
    else:
        return name.strip()

def load_requires_from_file(filepath):
    with open(filepath) as fp:
        return [take_package_name(pkg_name) for pkg_name in fp.readlines()]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and give those URLs via &lt;code&gt;dependency_link&lt;/code&gt; attribute in &lt;code&gt;setup&lt;/code&gt; function:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-setup.py&#34;&gt;def load_links_from_file(filepath):
    res = []
    with open(filepath) as fp:
        for pkg_name in fp.readlines():
            if pkg_name.startswith(&amp;quot;-e&amp;quot;):
                res.append(pkg_name.split(&amp;quot; &amp;quot;)[1])
    return res

setup(
    # Other clauses are omitted.
    install_requires=load_requires_from_file(&amp;quot;requirements.txt&amp;quot;),
    dependency_links=load_links_from_file(&amp;quot;requirements.txt&amp;quot;),
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, &lt;code&gt;python setup.py test&lt;/code&gt; downloads packages from GitHub and runs tests.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Compiling a Sphinx document on Wercker</title>
      <link>https://www.jkawamoto.info/blogs/sphinx-on-wercker/</link>
      <pubDate>Thu, 18 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.jkawamoto.info/blogs/sphinx-on-wercker/</guid>
      <description>

&lt;p&gt;After import your repository, application page looks like this. Move on the workflow tab.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.jkawamoto.info/fig/2016-08-18-1.png&#34;&gt;&lt;img src=&#34;https://www.jkawamoto.info/fig/2016-08-18-1.png&#34; alt=&#34;Fig. 1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Open configuration of the &lt;code&gt;build&lt;/code&gt; pipeline.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.jkawamoto.info/fig/2016-08-18-2.png&#34;&gt;&lt;img src=&#34;https://www.jkawamoto.info/fig/2016-08-18-2.png&#34; alt=&#34;Fig. 2&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the configuration of the build pipeline, scroll down to Permission level.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.jkawamoto.info/fig/2016-08-18-3.png&#34;&gt;&lt;img src=&#34;https://www.jkawamoto.info/fig/2016-08-18-3.png&#34; alt=&#34;Fig. 3&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And choose &lt;code&gt;execute pipeline&lt;/code&gt; in order to prevent someone starting pipeline and see detailed logs.
Also set &lt;code&gt;gh-pages&lt;/code&gt; to Ignore branches so that Wercker will not start building documents after pushing to &lt;code&gt;gh-pages&lt;/code&gt; branch.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.jkawamoto.info/fig/2016-08-18-4.png&#34;&gt;&lt;img src=&#34;https://www.jkawamoto.info/fig/2016-08-18-4.png&#34; alt=&#34;Fig. 4&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then, back to the workflow tab and add a new pipeline.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.jkawamoto.info/fig/2016-08-18-5.png&#34;&gt;&lt;img src=&#34;https://www.jkawamoto.info/fig/2016-08-18-5.png&#34; alt=&#34;Fig. 5&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, we name the new pipeline &lt;code&gt;deploy&lt;/code&gt;, and hook type should be default to be chained to the build pipeline.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.jkawamoto.info/fig/2016-08-18-6.png&#34;&gt;&lt;img src=&#34;https://www.jkawamoto.info/fig/2016-08-18-6.png&#34; alt=&#34;Fig. 6&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In order to push built documents to GitHub, this pipeline should know an access token of GitHub.
Add such key with name &lt;code&gt;GIT_TOKEN&lt;/code&gt; and protected option in the environment variables section of &lt;code&gt;deploy&lt;/code&gt; pipeline.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.jkawamoto.info/fig/2016-08-18-7.png&#34;&gt;&lt;img src=&#34;https://www.jkawamoto.info/fig/2016-08-18-7.png&#34; alt=&#34;Fig. 7&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The token can be obtained in &lt;a href=&#34;https://github.com/settings/tokens&#34;&gt;https://github.com/settings/tokens&lt;/a&gt;.
If your repository is public, you only need a token with &lt;code&gt;public_repo&lt;/code&gt; scope. Otherwise, you may need a token with &lt;code&gt;repo&lt;/code&gt; scope.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.jkawamoto.info/fig/2016-08-18-8.png&#34;&gt;&lt;img src=&#34;https://www.jkawamoto.info/fig/2016-08-18-8.png&#34; alt=&#34;Fig. 8&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After adding &lt;code&gt;GIT_TOKEN&lt;/code&gt;, check Permission level is Execute pipelines.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.jkawamoto.info/fig/2016-08-18-9.png&#34;&gt;&lt;img src=&#34;https://www.jkawamoto.info/fig/2016-08-18-9.png&#34; alt=&#34;Fig. 9&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, make a workflow connecting the &lt;code&gt;deploy&lt;/code&gt; pipeline to the &lt;code&gt;build&lt;/code&gt; one in Workflow tab. Make sure this workflow only runs on master branch.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.jkawamoto.info/fig/2016-08-18-10.png&#34;&gt;&lt;img src=&#34;https://www.jkawamoto.info/fig/2016-08-18-10.png&#34; alt=&#34;Fig. 10&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the end, the workflow looks like the followings.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.jkawamoto.info/fig/2016-08-18-11.png&#34;&gt;&lt;img src=&#34;https://www.jkawamoto.info/fig/2016-08-18-11.png&#34; alt=&#34;Fig. 11&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, you need to add &lt;code&gt;wercker.yml&lt;/code&gt; in your branch root.
You use Sphinx to build documents of which sources are in &lt;code&gt;docs&lt;/code&gt;. &lt;code&gt;wercker.yml&lt;/code&gt; may be there.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-wercker.yml&#34;&gt;box: jkawamoto/ghp-box
build:
  steps:
    - jkawamoto/sphinx:
        basedir: docs
        packages: sphinx_rtd_theme
deploy:
  steps:
    - jkawamoto/ghp-import:
        token: $GIT_TOKEN
        basedir: docs/build/html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It also specifies to install &lt;code&gt;sphinx_rtd_theme&lt;/code&gt;. Make sure after running &lt;code&gt;make html&lt;/code&gt; in &lt;code&gt;doc&lt;/code&gt; folder, your documents are in &lt;code&gt;docs/build/html&lt;/code&gt;. Otherwise, edit &lt;code&gt;basedir&lt;/code&gt; in the last line.&lt;/p&gt;

&lt;h2 id=&#34;references:621771da372dad7b0cf1aa19329621c9&#34;&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jkawamoto/dockerfiles/tree/master/wercker-ghp-box&#34;&gt;jkawamoto/ghp-box&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jkawamoto/wercker-sphinx-step&#34;&gt;jkawamoto/sphinx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jkawamoto/wercker-ghp-import-step&#34;&gt;jkawamoto/ghp-import&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>講義ビデオ: 形式言語とオートマトン</title>
      <link>https://www.jkawamoto.info/blog-ja/2016-08-17/</link>
      <pubDate>Wed, 17 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.jkawamoto.info/blog-ja/2016-08-17/</guid>
      <description>

&lt;h2 id=&#34;教科書:1717e42594624ea816033f0095022e9c&#34;&gt;教科書&lt;/h2&gt;

&lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=FFFFFF&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=jkwf4mew-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=4781910262&amp;linkId=b80a4550067a9b6fd184676c56847ff0&#34;&gt;&lt;/iframe&gt;
&lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=FFFFFF&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=jkwf4mew-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=4781910270&amp;linkId=715b45764867431bfea1b57063f72787&#34;&gt;&lt;/iframe&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bit.ly/2b024rd&#34;&gt;講義ページ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;講義ビデオ:1717e42594624ea816033f0095022e9c&#34;&gt;講義ビデオ&lt;/h2&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/2hib899vlGM&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/PoGX-d4dePc&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/81V_txlnQCE&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/MOydFottvIc&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/P92FTTBL4sw&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/W6L9mIhfkYk&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/sJmS9hRmcMc&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/g_tnwhYoOjo&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/WOU3XGn23Ck&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/avqMn9ykuR0&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Internationalization (i18n) of Meteor applications</title>
      <link>https://www.jkawamoto.info/blogs/i18n-package-in-meteor/</link>
      <pubDate>Sat, 13 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.jkawamoto.info/blogs/i18n-package-in-meteor/</guid>
      <description>

&lt;h2 id=&#34;universe-i18n:b29d758a8384a43dccfcfc35d604f1ac&#34;&gt;universe:i18n&lt;/h2&gt;

&lt;p&gt;How to internationalize &lt;a href=&#34;https://www.meteor.com/&#34;&gt;Meteor&lt;/a&gt; application?
An &lt;a href=&#34;https://atmospherejs.com&#34;&gt;atmosphere&lt;/a&gt; package &lt;a href=&#34;https://atmospherejs.com/universe/i18n&#34;&gt;universe:i18n&lt;/a&gt; helps it.
It supports locales in &lt;a href=&#34;https://github.com/vazco/meteor-universe-i18n/blob/master/lib/locales.js&#34;&gt;the list&lt;/a&gt;,
and JSON and YAML formats for bilingual corpuses.&lt;/p&gt;

&lt;p&gt;To install &lt;a href=&#34;https://atmospherejs.com/universe/i18n&#34;&gt;universe:i18n&lt;/a&gt;, run&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ meteor add universe:i18n
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and add the following in script files to import it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import i18n from &amp;quot;meteor/universe:i18n&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;register-corpuses:b29d758a8384a43dccfcfc35d604f1ac&#34;&gt;Register corpuses&lt;/h3&gt;

&lt;p&gt;You can add corpuses with APIs in &lt;a href=&#34;https://atmospherejs.com/universe/i18n&#34;&gt;universe:i18n&lt;/a&gt;.
The following line adds a word associated with a namespace and a keyword to a locale.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;i18n.addTranslation(“locale&amp;quot;, “namespace&amp;quot;, “keyword&amp;quot;, “word&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;corpus-file:b29d758a8384a43dccfcfc35d604f1ac&#34;&gt;Corpus file&lt;/h3&gt;

&lt;p&gt;It is hard to add corpuses by &lt;code&gt;i18n.addTranslation&lt;/code&gt; function.
You can add corpuses with JSON and YAML files,
and such file names must end with &lt;code&gt;.i18n.json&lt;/code&gt; and &lt;code&gt;.i18n.yml&lt;/code&gt;, respectively.&lt;/p&gt;

&lt;p&gt;For example, a YAML corpus file consists of key-value pairs such as&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ja.i18n.yml&#34;&gt;ok: 決定
cancel: キャンセル
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can specify namespace of a corpus file with adding &lt;code&gt;_namespace&lt;/code&gt; key.
The following example is a set of corpuses for namespace &lt;code&gt;ui&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ja.i18n.yml&#34;&gt;_namespace: ui
ok: 決定
cancel: キャンセル
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Which locale a corpus file belongs to is specified by &lt;code&gt;_locale&lt;/code&gt; key or file name.
The following file belongs to locale &lt;code&gt;ja&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ja.i18n.yml&#34;&gt;_locale: ja
ok: 決定
cancel: キャンセル
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You need to open each corpus files to check locale if using &lt;code&gt;_locale&lt;/code&gt; key.
I think it is better to use file name to specify locale.
For example, a corpus file which belongs to &lt;code&gt;en-US&lt;/code&gt; locale should be following
one of the two formats.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;en-us.i18n.yml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;en-us/someName.i18n.yml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note that corpus files must not be in &lt;code&gt;imports&lt;/code&gt; directory.&lt;/p&gt;

&lt;h3 id=&#34;get-a-translated-word:b29d758a8384a43dccfcfc35d604f1ac&#34;&gt;Get a translated word&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;i18n.__(namespace, key)&lt;/code&gt; function returns a translated word associated with &lt;code&gt;namespace&lt;/code&gt; and &lt;code&gt;key&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;i18n.__(“ui”, “ok”); // -&amp;gt; 決定 (in locale ja)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;change-locale:b29d758a8384a43dccfcfc35d604f1ac&#34;&gt;Change locale&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;i18n.setLocale(&amp;quot;locale&amp;quot;)&lt;/code&gt; function sets a new locale &lt;code&gt;locale&lt;/code&gt;,
and downloads the corpus associated with the locale asynchronously.
The function returns a &lt;code&gt;Promise&lt;/code&gt; and &lt;code&gt;.then&lt;/code&gt; method is available to run some commands after receiving the corpus.&lt;/p&gt;

&lt;h3 id=&#34;use-universe-i18n-in-angular-meteor:b29d758a8384a43dccfcfc35d604f1ac&#34;&gt;Use universe:i18n in Angular-Meteor&lt;/h3&gt;

&lt;p&gt;To use universe:i18n in &lt;a href=&#34;http://www.angular-meteor.com/&#34;&gt;Angular-Meteor&lt;/a&gt; template,
add &lt;code&gt;i18n.getTranslation&lt;/code&gt; method in a scope.
Foe example, the following controller&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-app.js&#34;&gt;class AppCtrl {

  constructor() {
    this.translator = i18n.getTranslation;
  }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;provides &lt;code&gt;translator&lt;/code&gt; method and a template&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;md-button ng-click=&amp;quot;$ctrl.onNext()” aria-label=&amp;quot;$ctrl.translator(‘ui&#39;, ‘ok’)&amp;quot;&amp;gt;
  {{$ctrl.translator(&amp;quot;button&amp;quot;, &amp;quot;start&amp;quot;)}}
&amp;lt;/md-button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;inserts a word associated with &lt;code&gt;button&lt;/code&gt; namespace and &lt;code&gt;start&lt;/code&gt; key.
To update such words when locale is changed, use the following commands:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const setLocalePromise = i18n.setLocale(locale) || i18n.setLocale(&amp;quot;en&amp;quot;);
setLocalePromise.then((e) =&amp;gt; {
   this.translator = i18n.getTranslation;
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But if you call &lt;code&gt;setLocale&lt;/code&gt; function without an UI event, for example in a constructor, DOM won&amp;rsquo;t be updated.
You need to use &lt;code&gt;$scope.$apply()&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;constructor($scope) {

  const setLocalePromise = i18n.setLocale(getLang()) || i18n.setLocale(&amp;quot;en&amp;quot;);
  setLocalePromise.then(() =&amp;gt; {
    $scope.$apply( () =&amp;gt;{
      this.translator = i18n.getTranslation;
    });
  });

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;See &lt;a href=&#34;http://jimhoskins.com/2012/12/17/angularjs-and-apply.html&#34;&gt;AngularJS and scope.$apply&lt;/a&gt; for more information.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>データ解析のための統計モデリング入門 第10章 を PyMC で解く</title>
      <link>https://www.jkawamoto.info/blog-ja/pymc-lesson-10/</link>
      <pubDate>Tue, 24 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.jkawamoto.info/blog-ja/pymc-lesson-10/</guid>
      <description>

&lt;script src=&#34;https://gist.github.com/jkawamoto/4a136615118fffe2930c54773389d079.js&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;参考書籍:347a12c97dd1f9b47c3d208ca1b149a3&#34;&gt;参考書籍&lt;/h2&gt;

&lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=FFFFFF&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=jkwf4mew-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=400006973X&amp;linkId=e5d3611547b0a6ff789dc2ce355b7a15&#34;&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>レビューサイトにおける不均質性を考慮した特異なレビュアー発見とレビューサマリの推測</title>
      <link>https://www.jkawamoto.info/slides/deim2016/</link>
      <pubDate>Mon, 29 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.jkawamoto.info/slides/deim2016/</guid>
      <description>&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/ifpVDK856yUGec&#34; width=&#34;595&#34; height=&#34;485&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt; &lt;/iframe&gt; 
</description>
    </item>
    
    <item>
      <title>LaTeX スニペット集</title>
      <link>https://www.jkawamoto.info/blog-ja/latex-snippets/</link>
      <pubDate>Wed, 02 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.jkawamoto.info/blog-ja/latex-snippets/</guid>
      <description>&lt;script src=&#34;https://gist.github.com/jkawamoto/e9f73ffab91a7fda62b3.js&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>高度プログラミングサンプルコード</title>
      <link>https://www.jkawamoto.info/blog-ja/programming-sample-codes/</link>
      <pubDate>Tue, 21 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.jkawamoto.info/blog-ja/programming-sample-codes/</guid>
      <description>&lt;script src=&#34;https://gist.github.com/jkawamoto/7aca96b3ac8f96a3d769.js&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>初期レビューを用いた長期間評価推定</title>
      <link>https://www.jkawamoto.info/slides/deim2015/</link>
      <pubDate>Mon, 02 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.jkawamoto.info/slides/deim2015/</guid>
      <description>&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/4qJ5i65s5WhdRO&#34; width=&#34;595&#34; height=&#34;485&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt; &lt;/iframe&gt; 
</description>
    </item>
    
    <item>
      <title>bashでIPとPORT番号を取得</title>
      <link>https://www.jkawamoto.info/blog-ja/qiita-2014-12-10/</link>
      <pubDate>Wed, 10 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://www.jkawamoto.info/blog-ja/qiita-2014-12-10/</guid>
      <description>

&lt;p&gt;&lt;code&gt;docker run&lt;/code&gt; コマンドの &lt;code&gt;link&lt;/code&gt; オプションで受け取った環境変数を bash スクリプト内で解析する。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash
URL=tcp://127.0.0.1:80
IPPORT=${URL#*//}

# IP
echo ${IPPORT%:*}
# Port
echo ${IPPORT#*:}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;参考:47af2e49b17f04e7b38ce80b18151268&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/ozuma/20130928/1380380390&#34;&gt;shとbashでの変数内の文字列置換など | ろば電子が詰まっている&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Upstart で Docker コンテナを起動</title>
      <link>https://www.jkawamoto.info/blog-ja/starting-docker-container-via-upstart/</link>
      <pubDate>Sat, 08 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://www.jkawamoto.info/blog-ja/starting-docker-container-via-upstart/</guid>
      <description>&lt;p&gt;合っているのかイマイチ分かっていないけれど，下記の方法でとりあえず動いていると思う．&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;start on filesystem and started docker.io
stop on runlevel [!2345]

respawn
respawn limit 5 5

pre-start script

  # 古いコンテナが残っていたら削除
  OLD=`docker ps -a | grep “foo&amp;quot; | cut -d &amp;quot; &amp;quot; -f 1`
  if [ $OLD ]; then
      /usr/local/bin/docker kill $OLD
      /usr/local/bin/docker rm $OLD
  fi

end script

exec /usr/local/bin/docker run —name=foo -v /data:/var/data bar:latest
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Systemd の設定</title>
      <link>https://www.jkawamoto.info/blog-ja/systemd-configurations/</link>
      <pubDate>Thu, 25 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://www.jkawamoto.info/blog-ja/systemd-configurations/</guid>
      <description>

&lt;h3 id=&#34;マウントユニット:6b19b8ca7ad03e090dc16a2c8daabd45&#34;&gt;マウントユニット&lt;/h3&gt;

&lt;p&gt;ファイルシステムのマウントを設定する．
ユニットファイルはマウントポイントによって決まり拡張子は &lt;code&gt;.mount&lt;/code&gt;．例えば，/var/data にマウントする場合，
ユニットファイル名は &lt;code&gt;var-data.mount&lt;/code&gt; と / を - に置き換える．パスに - が含まれている場合はエスケープする．&lt;/p&gt;

&lt;h4 id=&#34;nfs-を用いてマウントする例:6b19b8ca7ad03e090dc16a2c8daabd45&#34;&gt;NFS を用いてマウントする例&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-conf&#34;&gt;[Unit]
Description=some network hdd

[Mount]
What=192.168.0.5:/data
Where=/var/data
Type=nfs
Options=nolock

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;サービスユニット:6b19b8ca7ad03e090dc16a2c8daabd45&#34;&gt;サービスユニット&lt;/h3&gt;

&lt;p&gt;Docker 用サービスを起動する設定．docker イメージの作成から行えるが，今回は既にあるイメージを起動する．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-conf&#34;&gt;[Unit]
Description=Apache2
After=docker.service var-data.mount
Requires=docker.service var-data.mount

[Service]
TimeoutStartSec=0
ExecStartPre=-/usr/bin/docker kill apache2
ExecStartPre=-/usr/bin/docker rm apache2
ExecStart=/usr/bin/docker run --name apache2 -v /var/data:/var/www/html:rw -p 80:80 apache2:latest
ExecStop /usr/bin/docker stop apache2

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ユニットの有効化:6b19b8ca7ad03e090dc16a2c8daabd45&#34;&gt;ユニットの有効化&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ sudo systemctl enable /etc/systemd/system/var-data.mount
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>XSLT にてノード名別に処理を切り替える</title>
      <link>https://www.jkawamoto.info/blog-ja/switching-action-in-xslt/</link>
      <pubDate>Tue, 23 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://www.jkawamoto.info/blog-ja/switching-action-in-xslt/</guid>
      <description>

&lt;p&gt;for-each 要素 + when 要素で対応しようとしていたがうまく行かなかった．
XPath にてノード名を比較する方法が無いため？&lt;/p&gt;

&lt;p&gt;XSLT 的には &lt;code&gt;apply-templetes&lt;/code&gt; 要素を使うのが正しいかと思われる．&lt;/p&gt;

&lt;h2 id=&#34;参考書籍:1f1ae7033ee5f696a9cb6314e126a8bc&#34;&gt;参考書籍&lt;/h2&gt;

&lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=FFFFFF&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=jkwf4mew-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=4756140653&amp;linkId=b2835df657e267763950c4c934907627&#34;&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>パブリックデータセット</title>
      <link>https://www.jkawamoto.info/blog-ja/public-dataset-list/</link>
      <pubDate>Sun, 13 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://www.jkawamoto.info/blog-ja/public-dataset-list/</guid>
      <description>&lt;p&gt;パブリックデータセットまとめページのリスト。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kdnuggets.com/datasets/index.html&#34;&gt;Datasets for Data Mining and Data Science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://aws.amazon.com/datasets&#34;&gt;Amazon Public Datasets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.datawrangling.com/some-datasets-available-on-the-web&#34;&gt;Some Datasets Available on the Web&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>個人情報の固まり</title>
      <link>https://www.jkawamoto.info/blog-ja/lots-of-private-information/</link>
      <pubDate>Sun, 13 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://www.jkawamoto.info/blog-ja/lots-of-private-information/</guid>
      <description>&lt;p&gt;電話長などで公開されているデータだと思うけれど，住所氏名電話番号が簡単に手に入るウェブページ．&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://atamaga.jp/whitepage/2012/index.html&#34;&gt;住所でポン！2012&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>