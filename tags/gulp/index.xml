<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gulp on Junpei Kawamoto</title>
    <link>https://www.jkawamoto.info/tags/gulp/</link>
    <description>Recent content in Gulp on Junpei Kawamoto</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2016 Junpei Kawamoto</copyright>
    <lastBuildDate>Wed, 14 Dec 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.jkawamoto.info/tags/gulp/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Incremental build of browserify and parcelify by gulp-watchify</title>
      <link>https://www.jkawamoto.info/blogs/incremental-build-by-gulp-watchify/</link>
      <pubDate>Wed, 14 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.jkawamoto.info/blogs/incremental-build-by-gulp-watchify/</guid>
      <description>

&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/substack/watchify&#34;&gt;watchify&lt;/a&gt; supports incremental build to reduce building time,
and &lt;a href=&#34;https://github.com/marcello3d/gulp-watchify&#34;&gt;gulp-watchify&lt;/a&gt; is a &lt;a href=&#34;http://gulpjs.com/&#34;&gt;gulp&lt;/a&gt; plugin of watchify.
This post explains how to apply watchfy to &lt;a href=&#34;http://browserify.org/&#34;&gt;browserify&lt;/a&gt; and &lt;a href=&#34;https://github.com/rotundasoftware/parcelify&#34;&gt;Parcelify&lt;/a&gt;
with &lt;a href=&#34;http://gulpjs.com/&#34;&gt;gulp&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;gulp-watchify&#34;&gt;gulp-watchify&lt;/h2&gt;

&lt;p&gt;From a &lt;a href=&#34;https://github.com/marcello3d/gulp-watchify/blob/master/examples/simple/gulpfile.js&#34;&gt;sample file&lt;/a&gt;,
basic usage is&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-coffeescript&#34;&gt;gulp = require &amp;quot;gulp&amp;quot;
$ = require(&amp;quot;gulp-load-plugins&amp;quot;)()
watching = false

gulp.task &amp;quot;browserify&amp;quot;, $.watchify (watchify) -&amp;gt;
  gulp.src &amp;quot;src/*.js&amp;quot;
    .pipe watchify
      watch:watching
    .pipe gulp.dest &amp;quot;public/js/&amp;quot;

gulp.task &amp;quot;watch&amp;quot;, -&amp;gt;
  watching = true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;By this task file, &lt;code&gt;gulp browserify&lt;/code&gt; builds normally,
and &lt;code&gt;gulp watch browserify&lt;/code&gt; starts watching script files to incremental build.&lt;/p&gt;

&lt;p&gt;Note that installing gulp-watchify doesn&amp;rsquo;t install watchify, and you need to run&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm i â€”save-dev watchify gulp-watchify
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;use-parcelify&#34;&gt;Use parcelify&lt;/h2&gt;

&lt;p&gt;gulp-watchify takes callback functions which will be called before bundling.
We use parcelify in the callback function.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-coffeescript&#34;&gt;gulp = require &amp;quot;gulp&amp;quot;
parcelify = require &amp;quot;parcelify&amp;quot;
$ = require(&amp;quot;gulp-load-plugins&amp;quot;)()
watching = false

gulp.task &amp;quot;browserify&amp;quot;, $.watchify (watchify) -&amp;gt;
  gulp.src &amp;quot;src/main.js&amp;quot;
    .pipe watchify
      extensions: [&amp;quot;.js&amp;quot;]
      watch: watching
      setup: (bundle) -&amp;gt;
        parcelify bundle,
          bundles:
            style: &amp;quot;public/css/bundle.css&amp;quot;
    .pipe $.rename &amp;quot;bundle.js&amp;quot;
    .pipe gulp.dest &amp;quot;public/js/&amp;quot;

gulp.task &amp;quot;watch&amp;quot;, -&amp;gt;
  watching = true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This task file reads &lt;code&gt;main.js&lt;/code&gt; as the entry script and outputs &lt;code&gt;bundle.js&lt;/code&gt;.
To rename file names, it requires &lt;code&gt;gulp-rename&lt;/code&gt;, too.&lt;/p&gt;

&lt;p&gt;watchify takes same options as ones browserify takes.
The above example takes &lt;code&gt;extensions&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>